AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation template to deploy EC2 instance with S3 access and Elastic IP."

Parameters:
  KeyName:
    Type: String
    Default: "Danny-EPA-Key"
    Description: "Key pair to SSH into the EC2 instance."

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "Brandscribe-VPC"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "Public-Subnet"

  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "Public-RouteTable"

  PublicRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow SSH, MySQL, HTTP, and HTTPS access"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: "0.0.0.0/0"

  Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      KeyName: !Ref KeyName
      ImageId: "ami-03fd334507439f4d1"
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref SecurityGroup
      Tags:
        - Key: "Name"
          Value: "Brandscribe"
      IamInstanceProfile: Brandscribe

  ElasticIP:
    Type: "AWS::EC2::EIP"
    Properties:
      InstanceId: !Ref Instance

  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "brandscribe-backup-epa"
      Tags:
        - Key: "Name"
          Value: "brandscribe-backup"

  S3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/Brandscribe"
            Action: "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::brandscribe-backup-epa"
              - !Sub "arn:aws:s3:::brandscribe-backup-epa/*"

Outputs:
  InstancePublicIP:
    Description: "Public IP address of the EC2 instance."
    Value: !GetAtt Instance.PublicIp

  S3BucketName:
    Description: "Name of the S3 bucket."
    Value: !Ref S3Bucket

  ElasticIPAddress:
    Description: "Elastic IP address."
    Value: !Ref ElasticIP
