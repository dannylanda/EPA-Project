name: Test and Deploy Bash Script

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # ✅ Validate required secrets
    - name: Validate Secrets
      run: |
        missing_secrets=()
        for secret in SSH_PRIVATE_KEY SSH_PORT SSH_USER FRONTEND_IP BACKEND_IP DOMAIN EMAIL DB_USERNAME DB_PASSWORD; do
          if [ -z "${{ secrets[secret] }}" ]; then
            missing_secrets+=("$secret")
          fi
        done
        if [ ${#missing_secrets[@]} -ne 0 ]; then
          echo "❌ Missing required secrets: ${missing_secrets[*]}"
          exit 1
        fi

    - name: Create and Secure SSH Key
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
        chmod 600 private_key

    # Frontend Deployment
    - name: Debug Frontend SSH Connection
      run: |
        ssh -i private_key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.FRONTEND_IP }} "echo 'Frontend SSH Connection Successful'"

    - name: Edit Frontend Script Variables
      run: |
        sed -i 's/REPLACE_DOMAIN/${{ secrets.DOMAIN }}/g' ./configs/nginx.conf
        sed -i 's/REPLACE_DOMAIN/${{ secrets.DOMAIN }}/g' ./bash_scripts/frontend.sh
        sed -i 's/REPLACE_EMAIL/${{ secrets.EMAIL }}/g' ./bash_scripts/frontend.sh
        sed -i 's/BACKEND_IP/${{ secrets.BACKEND_IP }}/g' ./bash_scripts/frontend.sh
        sed -i 's/DB_USERNAME/${{ secrets.DB_USERNAME }}/g' ./bash_scripts/frontend.sh
        sed -i 's/DB_PASSWORD/${{ secrets.DB_PASSWORD }}/g' ./bash_scripts/frontend.sh

    - name: Copy Frontend Files to VM
      run: |
        scp -r -i private_key -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} ./bash_scripts/frontend.sh ${{ secrets.SSH_USER }}@${{ secrets.FRONTEND_IP }}:/home/ubuntu/EPA-Project/bash_scripts/

    - name: Run Frontend Setup Script with Sudo
      run: |
        ssh -i private_key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.FRONTEND_IP }} 'sudo bash /home/ubuntu/EPA-Project/bash_scripts/frontend.sh'

    # Backend Deployment
    - name: Debug Backend SSH Connection
      run: |
        ssh -i private_key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.BACKEND_IP }} "echo 'Backend SSH Connection Successful'"

    - name: Edit Backend Script Variables
      run: |
        sed -i 's/FRONTEND_IP/${{ secrets.FRONTEND_IP }}/g' ./bash_scripts/backend.sh
        sed -i 's/DB_USERNAME/${{ secrets.DB_USERNAME }}/g' ./bash_scripts/backend.sh
        sed -i 's/DB_PASSWORD/${{ secrets.DB_PASSWORD }}/g' ./bash_scripts/backend.sh

    - name: Copy Backend Files to VM
      run: |
        scp -r -i private_key -o StrictHostKeyChecking=no -P ${{ secrets.SSH_PORT }} ./bash_scripts/backend.sh ${{ secrets.SSH_USER }}@${{ secrets.BACKEND_IP }}:/home/ubuntu/EPA-Project/bash_scripts/

    - name: Run Backend Setup Script with Sudo
      run: |
        ssh -i private_key -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.BACKEND_IP }} 'sudo bash /home/ubuntu/EPA-Project/bash_scripts/backend.sh'

    # Clean Up SSH Key
    - name: Clean Up
      run: rm -f private_key